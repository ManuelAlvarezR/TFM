# option gurobi_options;
# option gurobi_options '';

reset;
reset;

model st_bpv2_LP.mod;
data Omega11.dat;

# General solving options
suffix bestbound OUT;
option reset_initial_guesses 1; # Para que cando resolva varias formulacions, inicie a resolucion da nova formulacion cos valores iniciales 0,0 (igual que no caso anterior)
# Se nn o pon, por defecto colle a solucion anterior, que esta ben para eficiencia pero non para comparar
option dual_initial_guesses 0; #same, coas variables duales
option send_statuses 0; # para indicar as variables que estan na base

option show_stats 0; # AMPL will show stats about number of constraints and variables when running solve
option presolve 0;	# Disable AMPL presolve

printf"\n####################################\n ";
option solver gurobi;

# "$gurobi_options" ensures that options are added on top of previously declared options
option gurobi_options 'presolve=0'; ## Disable Gurobi presolve
option gurobi_options $gurobi_options ' bestbound=1'; ## Return best bound (LB)
option gurobi_options $gurobi_options ' Threads=1';

option gurobi_options $gurobi_options ' outlev=0'; ## Print more information while solving

option gurobi_options $gurobi_options ' method=1'; ## Which algorithm to use for non-MIP problems or for the root node of MIP problems
# -1 automatic (default): 3 for LP, 2 for QP, 1 for MIP root node
# 0 = primal simplex; 1 = dual simplex; 2 = barrier; 3 = nondeterministic concurrent (several solves in parallel); 4 = deterministic concurrent; 5 = deterministic concurrent simplex.
option gurobi_options $gurobi_options ' iterlim=3' ;
option gurobi_options $gurobi_options ' logfile=log.txt writeprob=model.lp resultfile=sol.sol';
 
 
solve;
display _version;

printf"\n";
display solve_result;
display solve_exitcode;
display objfun;
display X1;
display X2;
display X3;
display X11;
display X12;
display X13;
display X22;
display X23;
display X33;

printf"\n#------ Theta 1 ------#\n ";
display X11-X1*X1;
display X12-X1*X2;
display X13-X1*X3;
printf"\n#------ Theta 2 ------#\n ";
display X12-X2*X1;
display X22-X2*X2;
display X23-X2*X3;
printf"\n#------ Theta 3 ------#\n ";
display X13-X3*X1;
display X23-X2*X3;
display X33-X3*X3;

display lu11.dual;
display uu33.dual;

